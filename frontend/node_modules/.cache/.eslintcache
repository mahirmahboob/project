[{"/Users/mahirmahboob/Desktop/nodejs/frontend/src/index.js":"1","/Users/mahirmahboob/Desktop/nodejs/frontend/src/App.js":"2","/Users/mahirmahboob/Desktop/nodejs/frontend/src/reportWebVitals.js":"3","/Users/mahirmahboob/Desktop/nodejs/frontend/src/Notfound.js":"4","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/homepage/homepage.js":"5","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/Signup.js":"6","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/navbar/navbar.js":"7","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/quiz/quiz.js":"8","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/searchPage/searchPage.js":"9","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/Login.js":"10","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/surpriseMe/surpriseMe.js":"11","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/genre/genre.js":"12","/Users/mahirmahboob/Desktop/nodejs/frontend/src/testData/data.js":"13","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/tobereadlistings.js":"14","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/deletetobereadentry.js":"15","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/addtobereadentry.js":"16","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/searchbar.js":"17","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/forgot.js":"18","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/forgotusername.js":"19","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/dashboard.js":"20","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/toberead.js":"21","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/AboutUs/aboutus.js":"22","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/AboutUs/card.js":"23","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/AboutUs/data.js":"24","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/quiz/Questions.js":"25","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/blog/commentsOld.js":"26","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/userbookhistory.js":"27","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/gethistorytable.js":"28","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/tobedeletefromhistory.js":"29","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/deletesomethingfromhistory.js":"30","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/blog/blogmain.js":"31","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/blog/posts/posts.js":"32","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/blog/posts/PostEntries.js":"33","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/blog/Comments/comments.js":"34","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/blog/Comments/CommentEntries.js":"35","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/blog/Comments/PostComment.js":"36"},{"size":594,"mtime":1635555988000,"results":"37","hashOfConfig":"38"},{"size":3100,"mtime":1637687031604,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1632672688523,"results":"40","hashOfConfig":"38"},{"size":346,"mtime":1632672688518,"results":"41","hashOfConfig":"38"},{"size":7171,"mtime":1635625046644,"results":"42","hashOfConfig":"38"},{"size":7000,"mtime":1635632875762,"results":"43","hashOfConfig":"38"},{"size":2425,"mtime":1635440281163,"results":"44","hashOfConfig":"38"},{"size":2884,"mtime":1636681303928,"results":"45","hashOfConfig":"38"},{"size":6299,"mtime":1635627123571,"results":"46","hashOfConfig":"38"},{"size":4297,"mtime":1637687753481,"results":"47","hashOfConfig":"38"},{"size":4327,"mtime":1635624266586,"results":"48","hashOfConfig":"38"},{"size":4090,"mtime":1635371895402,"results":"49","hashOfConfig":"38"},{"size":3593,"mtime":1635017440379,"results":"50","hashOfConfig":"38"},{"size":1374,"mtime":1636825999878,"results":"51","hashOfConfig":"38"},{"size":1243,"mtime":1637688045259,"results":"52","hashOfConfig":"38"},{"size":2255,"mtime":1637687923698,"results":"53","hashOfConfig":"38"},{"size":2074,"mtime":1636590121546,"results":"54","hashOfConfig":"38"},{"size":5209,"mtime":1636432892444,"results":"55","hashOfConfig":"38"},{"size":3721,"mtime":1635617907224,"results":"56","hashOfConfig":"38"},{"size":3132,"mtime":1637348542496,"results":"57","hashOfConfig":"38"},{"size":2536,"mtime":1637686827609,"results":"58","hashOfConfig":"38"},{"size":1065,"mtime":1635631500357,"results":"59","hashOfConfig":"38"},{"size":201,"mtime":1635631524204,"results":"60","hashOfConfig":"38"},{"size":3109,"mtime":1635534769822,"results":"61","hashOfConfig":"38"},{"size":750,"mtime":1636678666245,"results":"62","hashOfConfig":"38"},{"size":881,"mtime":1636823500232,"results":"63","hashOfConfig":"38"},{"size":1311,"mtime":1637688042461,"results":"64","hashOfConfig":"38"},{"size":1285,"mtime":1636919653474,"results":"65","hashOfConfig":"38"},{"size":1020,"mtime":1636913695519,"results":"66","hashOfConfig":"38"},{"size":1125,"mtime":1637688046786,"results":"67","hashOfConfig":"38"},{"size":7343,"mtime":1637354339132,"results":"68","hashOfConfig":"38"},{"size":572,"mtime":1637081647840,"results":"69","hashOfConfig":"38"},{"size":2269,"mtime":1637087479230,"results":"70","hashOfConfig":"38"},{"size":641,"mtime":1637087942920,"results":"71","hashOfConfig":"38"},{"size":666,"mtime":1637085709369,"results":"72","hashOfConfig":"38"},{"size":2698,"mtime":1637089654485,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1ueyz9t",{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"100","usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"103","usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"76"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"76"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/Users/mahirmahboob/Desktop/nodejs/frontend/src/index.js",[],["162","163"],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/App.js",["164","165"],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/reportWebVitals.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/Notfound.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/homepage/homepage.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/Signup.js",["166","167","168","169","170","171","172"],"import React, { Component } from \"react\";\n\n// const url = '/rest/signup'\nconst appStyle = {\n    height: '250px',\n    display: 'flex'\n};\n\nconst formStyle = {\n    margin: 'auto',\n    padding: '10px',\n    borderRadius: '5px',\n    background: '#ebd0b9',\n    width: '400px',\n    display: 'block'\n};\n\nconst labelStyle = {\n    margin: '10px 0 5px 0',\n    fontFamily: 'Arial, Helvetica, sans-serif',\n    fontSize: '15px',\n};\n\nconst inputStyle = {\n    margin: '5px 0 10px 0',\n    padding: '0px', \n    border: '1px solid #bfbfbf',\n    borderRadius: '0px',\n    boxSizing: 'border-box',\n    width: '100%'\n};\n\nconst submitStyle = {\n    margin: '10px 0 0 0',\n    padding: '7px 7px',\n    border: '1px solid #efffff',\n    borderRadius: '3px',\n    background: '#aaa',\n    width: '100%', \n    fontSize: '15px',\n    color: 'white',\n    display: 'block'\n};\nclass Signup extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            Confirmpassword: \"\",\n            favoriteTeacher: \"\",\n            account: {},\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    handleSubmitSignup = (e) => {\n        e.preventDefault();\n\n        fetch('/rest/register', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password,\n                Confirmpassword: this.state.Confirmpassword,\n                favoriteTeacher: this.state.favoriteTeacher,\n                email: this.state.email,\n    })\n        }).then(response => {\n            if (response.status === 404) {\n                alert(\"That username already exist, please update your username\");\n            }\n            else if (response.status ===406)\n            {\n                alert(\"Your Password and Confirm Password does not match\");\n            }\n             else if (response.status ===498)\n            {\n                alert(\"Email already exist, please select a different Email Id\");\n            }\n            else if (response.status === 400)\n            {\n                alert(\"Password and Confirm Password can not be empty\");\n            }\n\n            else if (response.status ===416)\n            {\n                alert(\"Username and Password can not be less than seven character long\");\n            }\n\n            else if (response.status ===409)\n            {\n                alert(\"Favorite Teacher has to be atleast four character long\");\n            }\n\n         else if (response.status ===417)\n            {\n                alert(\"Email field can not be empty and it has to be atleast 7 characters long\");\n            }\n\n            else if (response.status === 201) {\n            alert(\"Succesfully Signup Up!\");\n            \n            window.location.href =  'http://localhost:3000';\n            \n\n            }\n            })\n            .catch(function(error) {\n            \n                console.log('Request failed', error)\n            });\n    } \n\n    render() {\n        const username = this.state.username;\n        const password = this.state.password;\n        const Confirmpassword = this.state.Confirmpassword;\n        const favoriteTeacher = this.state.favoriteTeacher;\n        const email = this.state.email;\n     return (  \n        <div style={{padding: 10}}>\n            <div style={appStyle}>\n                <div style={formStyle}>\n                    <b>Create an Account</b>\n                    <br/>\n                    <b>Join our community</b>\n                    <br/>\n                    <br/>\n                    <form onSubmit={this.handleSubmitSignup}>\n                        <table border=\"0\">\n                            <tbody>\n                                \n                                <tr>\n                                    <td>Username:</td>\n                                    <td>\n                                        <input type=\"username\" name=\"username\" size=\"20\" autocorrect=\"off\" spellcheck=\"false\"\n                                            autocapitalize=\"off\" value={this.state.username} onChange={this.handleChange}/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Email:</td>\n                                    <td>\n                                        <input type=\"Email\" name=\"email\" size=\"20\" autocorrect=\"off\" spellcheck=\"false\"\n                                            autocapitalize=\"off\" value={this.state.email} onChange={this.handleChange}/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Password:</td>\n                                    <td>\n                                        <input type=\"password\" name=\"password\" size=\"20\"\n                                            required value={this.state.password} onChange={this.handleChange}/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Confirm Password:</td>\n                                    <td>\n                                        <input type=\"password\" name=\"Confirmpassword\" size=\"20\"\n                                            required value={this.state.Confirmpassword} onChange={this.handleChange}/>\n                                    </td>\n                                </tr>\n                                                                <tr>\n                                    <td>Who is your Favorite Teacher:</td>\n                                    <td>\n                                        <input type=\"text\" name=\"favoriteTeacher\" size=\"20\"\n                                            required value={this.state.favoriteTeacher} onChange={this.handleChange}/>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <br/>\n                        <input style={submitStyle} type=\"submit\" value=\"Submit\"/>\n                        <div>\n                        Already have an account? \n                            <a href=\"/login\"> Log in Here!</a>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default Signup;\n\n// import React, { Component } from \"react\";\n\n// // const url = '/rest/login'\n\n// class Signup extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n           \n//         }\n//     }\n    \n\n//     render() {\n     \n//      return (  \n//         <div>\n//          Signup\n//         </div>\n//     );\n//     }\n// }\n\n// export default Signup;","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/navbar/navbar.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/quiz/quiz.js",["173","174","175","176"],"import React, { useState } from 'react';\nimport {Questions} from './Questions';\nconst url = \"http://localhost:5000/takeaquiz\";\n\nfunction TakeQuiz(){\n    const[currQuestion,setCurrentQuestion] = useState(0);\n    const[optionChosen,setOptionChosen] = useState(\"\");\n    const [userinfo, setUserInfo] = useState([]);\n    \n    // let genre =  '';\n    // let age=  '';\n    // let page=  '';\n    // let date=  '';\n    // let triggers=  '';\n    let recommendations= [];\n    let info = [];\n\n\n    const nextQuestion = (answer)=> {\n        Questions[currQuestion].ans = optionChosen;\n        //info[currQuestion] = optionChosen;\n        userinfo[currQuestion] = optionChosen;\n        //console.log(Questions[currQuestion].ans);\n        // if (currQuestion === 0) {\n        //     genre = optionChosen;\n        // }\n        // console.log(genre);\n        \n        //console.log(info[currQuestion])\n        setCurrentQuestion(currQuestion + 1);\n    };\n    const submission = (info) => {\n        info.preventDefault();\n        userinfo[currQuestion] = optionChosen;\n        \n        fetch(url, {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                genre: userinfo[0],\n                age: userinfo[1],\n                page: userinfo[2],\n                date: userinfo[3],\n                triggers: userinfo[4],\n\n            })\n        }).then(result =>result.json())\n            .then(data => {\n                recommendations=data\n                console.log(recommendations[0])\n                //{printfunction()}\n                //{printrecommendation()}\n                \n            }) \n        \n    };\n\n\n    const printrecommendation = () => {\n      console.log(recommendations[0])\n    }\n\n     const printfunction = () => {\n      console.log(userinfo[0]);\n      console.log(userinfo[1]);\n      console.log(userinfo[2]);\n      console.log(userinfo[3]);\n      console.log(userinfo[4]);\n    };\n\n    return <div className = \"TakeQuiz\">\n        <h1> {Questions[currQuestion].prompt} </h1>\n            <div className = 'Options'>\n                <button onClick={()=>setOptionChosen(Questions[currQuestion].A)}>{Questions[currQuestion].A}</button>\n                <button onClick={()=>setOptionChosen(Questions[currQuestion].B)}>{Questions[currQuestion].B}</button>\n                <button onClick={()=>setOptionChosen(Questions[currQuestion].C)}>{Questions[currQuestion].C}</button>\n                <button onClick={()=>setOptionChosen(Questions[currQuestion].D)}>{Questions[currQuestion].D}</button>\n            </div>\n            {currQuestion === Questions.length -1 ? (\n                <button onClick={submission}> Submit </button>\n            ): (\n                <button onClick={nextQuestion}>Next Question</button>\n            )}      \n    </div>\n}\nexport default TakeQuiz;","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/searchPage/searchPage.js",["177"],"import React from \"react\";\nimport { useState } from 'react';\nimport { useEffect } from \"react\";\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\n// const url = \"http://localhost:3000/search\";\nconst SearchPage = () => {\n    //test data\n    /*\n    const rowData = [\n        {title: \"Love Life\", author: \"Amy Azelia\", genre: \"Romance\", votes: 1000000, publishingDate: \"6/10/21\", link:\"http://allbooks.com/Love-Life\" },\n        {title: \"The Secret Society\", author: \"Adrien Potter\", genre: \"Mystery\", votes: 100000, publishingDate: \"7/10/12\", link:\"http://allbooks.com/TheSS\"},\n        {title: \"Ancient Civilization\", author: \"Gideon Aberforth\", genre: \"History\", votes: 100002, publishingDate: \"10/10/20\", link:\"http://allbooks.com/AncCiv\"},\n        {title: \"Elite Guardians\", author: \"Loki Odinson\", genre: \"SciFi\", votes: 10005, publishingDate: \"9/10/11\", link:\"http://allbooks.com/Elguard\"},\n        {title: \"Love Life\", author: \"Amy Azelia\", genre: \"Romance\", votes: 1000000, publishingDate: \"6/10/21\", link:\"http://allbooks.com/Love-Life\" },\n        {title: \"The Secret Society\", author: \"Adrien Potter\", genre: \"Mystery\", votes: 100000, publishingDate: \"7/10/12\", link:\"http://allbooks.com/TheSS\"},\n        {title: \"Ancient Civilization\", author: \"Gideon Aberforth\", genre: \"History\", votes: 100002, publishingDate: \"10/10/20\", link:\"http://allbooks.com/AncCiv\"},\n        {title: \"Elite Guardians\", author: \"Loki Odinson\", genre: \"SciFi\", votes: 10005, publishingDate: \"9/10/11\", link:\"http://allbooks.com/Elguard\"},\n        {title: \"Love Life\", author: \"Amy Azelia\", genre: \"Romance\", votes: 1000000, publishingDate: \"6/10/21\", link:\"http://allbooks.com/Love-Life\" },\n        {title: \"The Secret Society\", author: \"Adrien Potter\", genre: \"Mystery\", votes: 100000, publishingDate: \"7/10/12\", link:\"http://allbooks.com/TheSS\"},\n        {title: \"Ancient Civilization\", author: \"Gideon Aberforth\", genre: \"History\", votes: 100002, publishingDate: \"10/10/20\", link:\"http://allbooks.com/AncCiv\"},\n        {title: \"Elite Guardians\", author: \"Loki Odinson\", genre: \"SciFi\", votes: 10005, publishingDate: \"9/10/11\", link:\"http://allbooks.com/Elguard\"},\n        {title: \"Love Life\", author: \"Amy Azelia\", genre: \"Romance\", votes: 1000000, publishingDate: \"6/10/21\", link:\"http://allbooks.com/Love-Life\" },\n        {title: \"The Secret Society\", author: \"Adrien Potter\", genre: \"Mystery\", votes: 100000, publishingDate: \"7/10/12\", link:\"http://allbooks.com/TheSS\"},\n        {title: \"Ancient Civilization\", author: \"Gideon Aberforth\", genre: \"History\", votes: 100002, publishingDate: \"10/10/20\", link:\"http://allbooks.com/AncCiv\"},\n        {title: \"Elite Guardians\", author: \"Loki Odinson\", genre: \"SciFi\", votes: 10005, publishingDate: \"9/10/11\", link:\"http://allbooks.com/Elguard\"},\n        {title: \"Love Life\", author: \"Amy Azelia\", genre: \"Romance\", votes: 1000000, publishingDate: \"6/10/21\", link:\"http://allbooks.com/Love-Life\" },\n        {title: \"The Secret Society\", author: \"Adrien Potter\", genre: \"Mystery\", votes: 100000, publishingDate: \"7/10/12\", link:\"http://allbooks.com/TheSS\"},\n        {title: \"Ancient Civilization\", author: \"Gideon Aberforth\", genre: \"History\", votes: 100002, publishingDate: \"10/10/20\", link:\"http://allbooks.com/AncCiv\"},\n        {title: \"Elite Guardians\", author: \"Loki Odinson\", genre: \"SciFi\", votes: 10005, publishingDate: \"9/10/11\", link:\"http://allbooks.com/Elguard\"}\n    ];\n    */\n\n    //const rowData = [];\n\n    useEffect( () => {\n        fetchItems();\n    }, []);\n\n    const [rowData, setItems] = useState([]);\n\n    const fetchItems = async () => {\n        const data = await fetch('/searchup');\n        const rowData = await data.json();\n        setItems(rowData);\n    };\n\n\n    // const [rowData, setRowData] = useState([]);\n\n    // useEffect(() => {\n    //     fetch(url)\n    //     .then(result => result.json())\n    //     .then(rowData => setRowData(rowData))\n    // }, []);\n\n\n\n    const [gridApi, setGridApi] = useState(null);\n    const [gridColumApi, setGridColumnApi] = useState(null);\n    const searchDivStyle={backgroundColor:\"#dedede\",padding:10}\n    const searchStyle={width:\"40%\",padding:\"10px 20px\",borderRadius:0,outline:0,fontSize:\"100%\"}\n    function onGridReady(params) {\n        setGridApi(params.api);\n        setGridColumnApi(params.columnApi);\n      }\n    const onFilterTextChange=(e)=>{\n      gridApi.setQuickFilter(e.target.value)\n    }\n    \n    return (\n        <div>\n            <div style={{padding:10, fontSize:40}}>Search our directory!</div>\n            {/* To Do: add filters and sortablilty */}\n            <div style={searchDivStyle}>\n                <input type=\"search\" style={searchStyle} onChange={onFilterTextChange} placeholder=\"search here...\"/>\n            </div>\n            <div className=\"ag-theme-alpine\" style={{paddingLeft: 50, height: 600, width: 1400}}>\n                <AgGridReact\n                    rowData={rowData}\n                    onGridReady={onGridReady}\n                    >\n                    <AgGridColumn field=\"book_name\" filter={true}></AgGridColumn>\n                    <AgGridColumn field=\"author\" filter={true}></AgGridColumn>\n                    <AgGridColumn field=\"genre\" filter=\"agTextColumnFilter\"></AgGridColumn>\n                    <AgGridColumn field=\"rating\" filter=\"agNumberColumnFilter\"></AgGridColumn>\n                    <AgGridColumn field=\"age_range\" filter=\"agTextColumnFilter\"></AgGridColumn>\n                    <AgGridColumn field=\"maximum_pages\" filter=\"agNumberColumnFilter\"></AgGridColumn>\n                    <AgGridColumn field=\"publication_date\" filter=\"agNumberColumnFilter\"></AgGridColumn>\n                    <AgGridColumn field=\"trigger_warning\" filter=\"agTextColumnFilter\"></AgGridColumn>\n                </AgGridReact>\n            </div>\n        </div>\n    );\n};\n    \nexport {SearchPage};\n// // const url = '/rest/login'\n\n// class SearchPage extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n           \n//         }\n//     }\n    \n//     render() {\n     \n//      return (  \n//         <div>\n//          Search me!\n         \n//         </div>\n//     );\n//     }\n// }\n\n// export default SearchPage;\n\n","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/Login.js",["178","179"],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/surpriseMe/surpriseMe.js",["180","181"],"import React from \"react\";\nimport './surpriseMe.css';\nexport default class Testfetch extends React.Component{\n    state = {\n        loading:true,\n        book:null\n    };\n    async componentDidMount() {\n        const url = \"http://localhost:5000/surpriseme\";\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({ book: data[0], loading: false});\n        //console.log(data);\n\n    }\n    render(){\n        return(\n            <body>\n                <div>\n                    {this.state.loading || !this.state.book ? (\n                <div>loading...</div>\n                ):(\n                <div>\n                <div className=\"grid-container\">\n                    <div className=\"a\">                    \n                        <img src={this.state.book.PictureLink} height={400} witdth={400} />\n                    </div>\n                    <div className=\"b\">\n                        <div className=\"chld\">\n                        <div className=\"txt\">Title: {this.state.book.book_name}</div>\n                        <div className=\"txt\">Author: {this.state.book.author}</div>\n                        <div className=\"txts\">{this.state.book.Synopsis}</div>\n                        <div className=\"txtss\">Genre: {this.state.book.genre}</div>\n                        <div className=\"txtss\">Publication Year: {this.state.book.publication_date}</div>\n                        <div className=\"txtss\">Rating: {this.state.book.rating}</div>\n                        <div className=\"txtss\">Maximum Pages: {this.state.book.maximum_pages}</div>\n                        <div className=\"txtss\">Age Range: {this.state.book.age_range}</div>\n                        {this.state.book.series? (\n                            <div className=\"txtss\" >Series: Yes</div>\n                        ):(\n                            <div className=\"txtss\">Series: No</div>\n                        )}\n                        {this.state.book.best_seller? (\n                            <div className=\"txtss\">Best Seller: Yes </div>\n                        ):(\n                            <div className=\"txtss\">Best Seller: No</div>\n                        )}\n                        {this.state.book.trigger_warning? (\n                            <div className=\"txtss\">Trigger Warnings: {this.state.book.trigger_warning} </div>\n                        ):(\n                            <div className=\"txtss\">Trigger Warnings: No</div>\n                        )}\n                        <div className=\"txtss\">\n                        <a href={this.state.book.LinkToAmazon} target=\"_blank\">Buy Here</a></div>\n                        </div>\n                    </div>\n                </div>\n \n{/*  \n                        <div>Title: {this.state.book.idbook_info}</div>\n                        <div>Author: {this.state.book.author}</div>\n                        <img src={this.state.book.picture} height={400} witdth={400} />\n                        <div>Genre: {this.state.book.genre}</div>\n                        <div>Publication Year: {this.state.book.publication_date}</div>\n                        <div>Rating: {this.state.book.rating}</div>\n                        <div>Maximum Pages: {this.state.book.maximum_pages}</div>\n                        <div>Age Range: {this.state.book.age_range}</div>\n                        {this.state.book.series? (\n                            <div>Series: Yes</div>\n                        ):(\n                            <div>Series: No</div>\n                        )}\n                        {this.state.book.best_seller? (\n                            <div>Best Seller: Yes </div>\n                        ):(\n                            <div>Best Seller: No</div>\n                        )}\n                        {this.state.book.triggers? (\n                            <div>Trigger Warnings: {this.state.book.triggers} </div>\n                        ):(\n                            <div>Trigger Warnings: No</div>\n                        )}\n                        \n                        <div>Buy Here: {this.state.book.buy}</div>\n                        <div class=\"text-center\"> Synopsis: {this.state.book.synopsis}</div> */}\n                    </div>\n                )}\n                \n            </div>  \n            </body>\n        );\n    }\n}","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/genre/genre.js",["182","183","184","185"],"import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport \"./genre.css\"\nimport books from \"../../testData/data\"\n\nclass GenreRecs extends Component {\n    constructor() {\n        super();\n        this.state = {\n            genres: [\n                { name: \"Cooking\", icon: \"cook1.jpg\" },\n                { name: \"Romance\", icon: \"romance.jpg\" },\n                { name: \"Fantasy\", icon: \"fantasy.jpg\" },\n                { name: \"Adventure\", icon: \"adventure.jpg\" },\n                { name: \"Action\", icon: \"action.jpg\" },\n                { name: \"Detective\", icon: \"detect.jpg\" },\n            ],\n            recommendations: [],\n            showicons: false,\n            icon: \"\",\n            name:\"\",\n        };\n    };\n\n    //when a button is clicked, it is going to send a request to server to get the data\n    //and when we get the data back, we would be able to put that in the recommendation array\n    //the get request will get data specific for that genre\n    //data is the array of all the book recommendation\n    //the data that we get back is json data\n\n\n    handler = (genre) => {\n        //this is to request data from the server\n           fetch(`http://localhost:5000/home/${genre.name}`)\n           .then(response=>response.json()) //converts to js. has the parsed data from the server and that becomes the parameter for the next .then\n           .then(data=>{\n               this.setState({\n                   recommendations:data, //data is response.json\n                   showicons: true,\n                   icon: genre.icon,\n                   name: genre.name,\n               })\n           })\n\n        //this using dummy data incase there is no server. Use this when not connnected to the server.\n        /*\n        const recs = books.filter(book => book.genre === genre.name)\n        this.setState({\n            recommendations: recs,\n            showicons: true,\n            icon: genre.icon,\n            name: genre.name,\n        })\n        */\n    }\n\n    render() {\n\n        return (\n            <div className=\"genre-container\" >\n                {\n                    this.state.showicons && (\n                        <div className=\"icons\">\n                            <img className=\"icon\" src={`${process.env.PUBLIC_URL}/img/${this.state.icon}`} alt={this.state.icon} />\n                            <h1 className=\"font\">{this.state.name}</h1>\n                            <img className=\"icon\" src={`${process.env.PUBLIC_URL}/img/${this.state.icon}`} alt={this.state.icon} />\n                        </div>\n                    )\n                }\n\n                <div className=\"buttons\">\n                    {this.state.genres.map(genre => (\n                        <button type=\"button\" key={genre.name} onClick={() => this.handler(genre)} className=\"right\" variant=\"warning\" size=\"lg\">\n                            {genre.name}\n                        </button>\n                    ))}\n\n                </div>\n                <div className=\"recs mt-4\">\n                    {\n                        this.state.recommendations.map(rec => (\n                            <div key={rec.book_name} className=\"book-card\">\n                                <h2> Title: {rec.book_name}</h2>\n                                <h2> Author: {rec.author}</h2>\n                                <h2> Rating: {rec.rating}</h2>\n                                <h2> Age Range: {rec.age_range}</h2>\n                                <h2> Page: {rec.maximum_pages}</h2>\n                                <h2> Publication Date: {rec.publication_date}</h2>\n                                <h2> Best Seller: {rec.best_seller}</h2>\n                                <h2>Series: {rec.series}</h2>\n                                <h2><a href={rec.LinkToAmazon} target=\"_blank\"> Purchase Link</a> </h2>\n                                <img src={rec.PictureLink} height={400} witdth={400} />\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GenreRecs;","/Users/mahirmahboob/Desktop/nodejs/frontend/src/testData/data.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/tobereadlistings.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/deletetobereadentry.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/addtobereadentry.js",["186","187"],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/searchbar.js",["188","189"],"import React, { Component, Fragment } from 'react';\nimport Select from 'react-select';\nimport axios from 'axios'\n\n\n/*\nconst urlAddEntry = \"http://localhost:5000/getbook\";\n//const urlAlreadyRead = \"http://localhost:8080/{usr}/alreadyRead\";\nconst options = [\n  { value: 'Live Love Laugh', label: 'Harry Potter and the Chamber of Secrets by J.K. Rowling' },\n  { value: 'Hills', label: 'Harry Potter and the Order of Phenoix by J.K. Rowling' },\n  { value: 'Percy', label: 'Percy Jackson and the Lightning Theif by Rick Riordin' },\n  { value: 'The Rose Code by Vanessa Michel', label: 'The Rose Code by Vanessa Michel'},\n  { value: 'The Labyrinth by Elle Werson', label: 'The Labyrinth by Elle Werson'},\n  { value: 'Abrinthine by H.R Wells', label: 'Abrinthine by H.R Wells'}\n];\n*/\nexport default class SearchBar extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      selectOptions : [],\n      book_name: \"\",\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  \n  handleChange = (e) => {\n      this.setState({ book_name: e.target.value });\n      this.props.update_title(e.target.value);\n  }\n\n async getOptions(){\n   //axios.defaults.withCredentials = true;\n    const res = await axios.get('http://localhost:5000/getbook');\n    const data = res.data\n    const options = data.map(d => ({\n      \"value\" : d.book_name,\n      \"label\" : d.book_name\n\n    }))\n    this.setState({selectOptions: options})\n  }\n\n  componentDidMount(){\n      this.getOptions()\n  }\n\n\n  render() {  \n    //console.log(this.state.book_name);  \n    return (\n      <div style={{justifyContent:'center',width:'500px', backgroundColor:'gray'}}>\n        \n          <select value={this.state.book_name} onChange={this.handleChange}>\n        {this.state.selectOptions.map(function(data, key){  return (\n          <option key={key} value={data.key}>{data.value}</option> \n          )\n        })}\n          </select>    \n      </div>\n    )\n  }\n}\n//https://react-select.com/home\n//https://github.com/JedWatson/react-select\n\n/*\n <Select options={this.state.selectOptions} />\n*/","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/forgot.js",["190"],"import React, { Component } from \"react\";\n\n\nconst appStyle = {\n    height: '250px',\n    display: 'flex'\n};\n\nconst formStyle = {\n    margin: 'auto',\n    padding: '10px',\n    borderRadius: '5px',\n    background: '#ebd0b9',\n    width: '400px',\n    display: 'block'\n};\n\nconst labelStyle = {\n    margin: '10px 0 5px 0',\n    fontFamily: 'Arial, Helvetica, sans-serif',\n    fontSize: '15px',\n};\n\nconst inputStyle = {\n    margin: '5px 0 10px 0',\n    padding: '0px', \n    border: '1px solid #bfbfbf',\n    borderRadius: '0px',\n    boxSizing: 'border-box',\n    width: '100%'\n};\n\nconst submitStyle = {\n    margin: '10px 0 0 0',\n    padding: '7px 7px',\n    border: '1px solid #efffff',\n    borderRadius: '3px',\n    background: '#aaa',\n    width: '100%', \n    fontSize: '15px',\n    color: 'white',\n    display: 'block'\n};\n\nclass forgot extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: \"\",\n            favoriteTeacher: \"\",\n            New_password: \"\",\n            New_passwordConfirm: \"\",\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n\n    }\n\n    handleForgotPassword = (e) => {\n        e.preventDefault();\n        \n\n        fetch('/forgot', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                favoriteTeacher: this.state.favoriteTeacher,\n                New_password: this.state.New_password,\n                New_passwordConfirm: this.state.New_passwordConfirm,\n\n    })\n        }).then(response => {\n            if (response.status ===406)\n            {\n                alert(\"New_Password & New_passwordConfirm needs to match\");\n            }\n            else if (response.status === 400)\n            {\n                alert(\"Can not leave any of the field blank\");\n            }\n\n            else if (response.status === 416)\n            {\n                alert(\"Password and Confirm password has to be atleast Seven characters long\");\n            }\n\n            else if (response.status === 404)\n            {\n                alert(\"Incorrect username or security answer\");\n            }\n\n            else if (response.status === 201) {\n            alert(\"Password was updated, please login!!\");\n            //this.props.handleLogin();\n            window.location.href = 'http://localhost:3000/';\n            }\n            })\n            .catch(function(error) {\n            \n                console.log('Request failed', error)\n            });\n    } \n// End of handlesubmit\n\n\n    render() {\n        const username = this.state.username;\n        const favoriteTeacher = this.state.favoriteTeacher;\n        const New_password = this.state.New_password;\n        const New_passwordConfirm = this.state.New_passwordConfirm;\n   \n\n     return ( \n    <div>\n     <div style={{padding: 10}}>\n        <div style={appStyle}>\n            <div style={formStyle}>\n            <b>Forgot Password</b>\n            <br/>\n            <br/>\n            <form onSubmit={this.handleForgotPassword}>\n                <table border=\"0\">\n                    <tbody>\n                        <tr>\n                            <td>Username:</td>\n                            <div style={inputStyle}>\n                                <input type=\"username\" name=\"username\" size=\"20\" autocorrect=\"off\" spellcheck=\"false\"\n                                       autocapitalize=\"off\" value={username} onChange={this.handleChange}/>\n                            </div>\n                        </tr>\n                        <tr>\n                            <td>New Password:</td>\n                            <div style={inputStyle}>\n                                <input type=\"password\" name=\"New_password\" size=\"20\"\n                                       required value={New_password} onChange={this.handleChange}/>\n                            </div>\n                        </tr>\n                        <tr>\n                            <td>Confirm New Password:</td>\n                            <div style={inputStyle}>\n                                <input type=\"password\" name=\"New_passwordConfirm\" size=\"20\"\n                                       required value={New_passwordConfirm} onChange={this.handleChange}/>\n                            </div>\n                        </tr>\n                        <tr>\n                            <td>Who is your favorite Teacher:</td>\n                            <div style={inputStyle}>\n                                <input type=\"text\" name=\"favoriteTeacher\" size=\"20\"\n                                       required value={favoriteTeacher} onChange={this.handleChange}/>\n                            </div>\n                        </tr>\n                    </tbody>\n                </table>\n                <br/>\n                <input style={submitStyle} type=\"submit\" value=\"Submit\"/>\n            </form>\n            <br/>\n             <a href=\"forgotusername\">Forgot your username?</a>\n            <br/>\n            <br/>\n            </div>\n        </div>\n        </div>\n        </div>\n        );\n    }\n}\n\nexport default forgot;\n","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/forgotusername.js",["191","192"],"import React, { Component } from \"react\";\n\nconst appStyle = {\n    height: '250px',\n    display: 'flex'\n};\n\nconst formStyle = {\n    margin: 'auto',\n    padding: '10px',\n    borderRadius: '5px',\n    background: '#ebd0b9',\n    width: '400px',\n    display: 'block'\n};\n\nconst labelStyle = {\n    margin: '10px 0 5px 0',\n    fontFamily: 'Arial, Helvetica, sans-serif',\n    fontSize: '15px',\n};\n\nconst inputStyle = {\n    margin: '5px 0 10px 0',\n    padding: '0px', \n    border: '1px solid #bfbfbf',\n    borderRadius: '0px',\n    boxSizing: 'border-box',\n    width: '100%'\n};\n\nconst submitStyle = {\n    margin: '10px 0 0 0',\n    padding: '7px 7px',\n    border: '1px solid #efffff',\n    borderRadius: '3px',\n    background: '#aaa',\n    width: '100%', \n    fontSize: '15px',\n    color: 'white',\n    display: 'block'\n};\n\nclass forgotusername extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            favoriteTeacher: \"\",\n            username: [],\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n\n    }\n\n    handleForgotUsername = (e) => {\n        e.preventDefault();\n        \n\n        fetch('/forgotusername', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                favoriteTeacher: this.state.favoriteTeacher,\n                email: this.state.email,\n\n\n    })\n        }).then(response=>response.json()) //converts to js. has the parsed data from the server and that becomes the parameter for the next .then\n       .then(data=>{\n        this.setState({\n            username:data //data is response.json\n           })\n       })\n    } \n// End of handlesubmit\n\n\n    render() {\n        const username = this.state.username;\n        const favoriteTeacher = this.state.favoriteTeacher;\n        const email = this.state.email;\n   \n\n     return ( \n    <div>\n     <div style={{padding: 10}}>\n        <div style={appStyle}>\n            <div style={formStyle}>\n            <b>Forgot Username</b>\n            <br/>\n            <br/>\n            <form onSubmit={this.handleForgotUsername}>\n                <table border=\"0\">\n                    <tbody>\n                        <tr>\n                            <td>Email:</td>\n                            <div style={inputStyle}>\n                                <input type=\"email\" name=\"email\" size=\"20\" autocorrect=\"off\" spellcheck=\"false\"\n                                       autocapitalize=\"off\" value={email} onChange={this.handleChange}/>\n                            </div>\n                        </tr>\n                        <tr>\n                            <td>Your Favorite Teacher:</td>\n                            <div style={inputStyle}>\n                                <input type=\"text\" name=\"favoriteTeacher\" size=\"20\"\n                                       required value={favoriteTeacher} onChange={this.handleChange}/>\n                            </div>\n                        </tr>\n                    </tbody>\n                </table>\n                <br/>\n                <input style={submitStyle} type=\"submit\" value=\"Submit\"/>\n            </form>\n            <a href=\"forgot\">Forgot your password?</a>\n    <div className=\"forgot_username\">\n        {\n            this.state.username.map(rec=>(\n                <div key={rec.username}className=\"username\">\n                <h2> Username: {rec.username}</h2>\n                </div>\n            ))\n        }\n    </div>\n            <br/>\n            </div>\n        </div>\n        </div>\n        </div>\n        );\n    }\n}\n\nexport default forgotusername;","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/dashboard.js",["193","194","195","196","197","198","199","200","201"],"import React from \"react\";\nimport {useEffect} from 'react';\nimport {useState } from 'react';\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport Search from 'react-search'\nimport ToBeRead from \"./toberead/toberead\";\nimport AddEntry from \"./toberead/addtobereadentry\";\nimport GetHistoryTable from \"./toberead/gethistorytable\";\nimport \"./dashboard.css\";\nimport {useParams} from \"react-router-dom\";\nimport { PropTypes } from 'react'\n// const url = \"http://localhost:3000/search\";\nconst sideBySide ={\n\n}\n////\n\n\nconst Dashboard = () => {\n\nlet userDetails = JSON.parse(localStorage.getItem('current_user'));\n//console.log(userDetails);\n\n\n\n    useEffect( () => {\n        fetchItems();\n    }, []);\n\n    const [rowData, setItems] = useState([]);\n\n    const fetchItems = async () => {\n        const data = await fetch('/toptenbooks');\n        const rowData = await data.json();\n        setItems(rowData);\n    };\n\n    /*\n    const rowData = [\n        {title: \"Love Life\", author: \"Amy Azelia\"},\n        {title: \"The Secret Society\", author: \"Adrien Potter\"},\n        {title: \"Ancient Civilization\", author: \"Gideon Aberforth\"},\n        {title: \"Elite Guardians\", author: \"Loki Odinson\"},\n        {title: \"Love Lives\", author: \"Amy Azelia\"},\n        {title: \"The Secret Societies\", author: \"Adrien Potter\"},\n        {title: \"Ancient Civilizations\", author: \"Gideon Aberforth\"},\n        {title: \"Elite Guardiens\", author: \"Loki Odinson\"},\n        {title: \"Love Lifes\", author: \"Amy Azelia\"},\n        {title: \"The Secret Societies\", author: \"Adrien Potter\"},\n    ];\n    */\n   \n    const [gridApi, setGridApi] = useState(null);\n    const [gridColumApi, setGridColumnApi] = useState(null);\n    const searchDivStyle={backgroundColor:\"#dedede\",padding:10}\n    const searchStyle={width:\"40%\",padding:\"10px 20px\",borderRadius:0,outline:0,fontSize:\"100%\"}\n\n    function onGridReady(params) {\n        setGridApi(params.api);\n        setGridColumnApi(params.columnApi);\n    \n      }\n\n\n    \n    return (\n        <div>\n            <div class=\"container\"> \n                <div class=\"one\">\n                    <div style={{ paddingBottom:10, textAlign:'center',fontSize:20, fontFamily: 'Courier New'}}> Top Ten!</div>    \n                    <div className=\"ag-theme-alpine\" style={{paddingLeft: 5, height: 500, width: 400}}>\n                        <AgGridReact\n                            rowData={rowData}\n                            onGridReady={onGridReady}\n                            >\n                            <AgGridColumn field=\"book_name\"></AgGridColumn>\n                            <AgGridColumn field=\"author\"></AgGridColumn>\n                        </AgGridReact>\n                    </div>\n                </div>\n                <div class=\"two\">\n                    <AddEntry/>\n                    <ToBeRead/>\n                    <h4> Your read list</h4>\n                    <GetHistoryTable/>\n                    \n                </div>\n            </div>\n        </div>\n    );\n};\n    \nexport default Dashboard;\n\n","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/toberead.js",["202","203"],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/AboutUs/aboutus.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/AboutUs/card.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/AboutUs/data.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/quiz/Questions.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/blog/commentsOld.js",["204","205"],"import React, { PureComponent, useState } from 'react'\nimport data from \"./data.json\"\nimport { CommentSection } from 'react-comments-section'\n\n\nconst CommentsOld = () => {\n   const [comment, setComment] = useState(data)\n   const userId = \"01a\"\n   const avatarUrl = \"https://ui-avatars.com/api/name=Riya&background=random\"\n   const name = \"xyz\"\n   const signinUrl = \"/login\"\n   const signupUrl = \"/signup\"\n   let count = 0\n   comment.map(i => {count+=1; i.replies && i.replies.map(i=> count+=1)} )\n\n   return (\n      <div className=\"commentSection\" style={{fontSize:12}}>\n        <div className=\"header\">{count} Comments</div>\n\n        <CommentSection currentUser={userId && { userId: userId, avatarUrl: avatarUrl, name: name }} commentsArray={comment}\n        setComment={setComment} signinUrl={signinUrl} signupUrl={signupUrl}/>\n     </div>\n   );\n }\n \n export default CommentsOld;",["206","207"],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/userbookhistory.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/gethistorytable.js",["208"],"import React, { Component } from \"react\";\nimport ToBeDeleteFromHistory from \"./tobedeletefromhistory\";\n\n\n\n//This is the history shelf...... This is where we will add user book.\n\nconst usr = JSON.parse(localStorage.getItem('current_user'));\nconst url = `/rest/historytable/${usr}`\n\nclass GetHistoryTable extends Component {\n  constructor() {\n    super();\n    this.state = {\n      gethistorytable: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(url, { method: \"GET\" })\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n            gethistorytable: data,\n        });\n      });\n  }\n\n  render() {\n    //console.log(this.state.articles);\n    return (\n      <div >\n        <div style={{width:'890px', height:'340px', overflowY:'scroll'}}>\n          <br/>\n            <div className=\"recs mt-44\">\n              {\n                this.state.gethistorytable.map(rec => (\n                  <div key={rec.PictureLink} className=\"book-card\">\n                  <img src={rec.PictureLink} height={300} witdth={210} />\n                  </div>\n                  ))\n              }\n            </div>\n          <ToBeDeleteFromHistory gethistorytable={this.state.gethistorytable}/>\n        </div>\n      </div>\n    );\n  }\n}\n    \nexport default GetHistoryTable;","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/tobedeletefromhistory.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/deletesomethingfromhistory.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/blog/blogmain.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/blog/posts/posts.js",["209"],"import React, { Component } from \"react\";\nimport PostEntries from \"./PostEntries\";\n\nconst url = \"localhost:5000/posts\"; \n\nclass Posts extends Component {\n  constructor() {\n    super();\n    this.state = { posts: \"\" };\n  }\n  componentDidMount() {\n    fetch(\"http://localhost:5000/posts\", { method: \"GET\" })\n      .then((response) => response.json())\n      .then((data) => { this.setState({ posts: data }); });\n  }\n  render() {\n    return (\n      <div>\n        Blog Posts\n        <PostEntries postEntries={this.state.posts} />\n      </div>\n    );\n  }\n}\n\nexport default Posts;","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/blog/posts/PostEntries.js",["210"],"import React from \"react\";\nimport Box from '@material-ui/core/Box';\nimport \"./PostEntries.css\";\nimport { Button } from \"react-bootstrap\";\nimport Comments from \"../Comments/comments\";\nimport Popup from \"reactjs-popup\";\n/////\n\nconst PostEntries = (postEntries) => {\n\n  const renderList = ({ postEntries }) => {\n    if (postEntries) {\n      return postEntries.map((data) => {\n        return (\n          <div style={{ marginLeft: '10%', marginTop: '40px', width: '80%', height: '35%', boxShadow: '5px 5px 5px 2px #bebebe', backgroundColor:\"#ebd3b9\"}}>\n            <Box color=\"black\" bgcolor=\"#ebd3b9\" p={8}>\n            <div>\n                {data.title}\n                <div>\n                <a href={data.link}>Link</a>\n                </div>\n            </div>\n            <div>\n                { /* data.review */}\n            </div>\n            {/* <div>\n              Upvotes: {data.upvotes}\n            </div> */}\n            <div>\n                    <Popup\n                        trigger={<button className=\"button\" style={{backgroundColor: '#d4c2b1', \n                        color: 'black',\n                        padding: '15px 32px',\n                        textAlign: 'center',                           \n                        fontSize: '15px',border:'none'}}> user comments </button>}\n                        modal\n                        nested\n                    >\n                        {close => (\n                        <div className=\"scroller\" style={{width:700, height:600}}>\n                            <button className=\"close\" onClick={close}>\n                            &times;\n                            </button>\n                            <div> Comments </div>\n                            <div style={{ paddingLeft: \"0%\", top: \"0%\", width: \"100%\", height: \"100%\", backgroundColor: \"#aaaaaa\"}}>                          \n                                <Comments title={data.title}/>\n                            </div>\n                            \n                        </div>\n                        )}\n                    </Popup>\n            </div>\n            </Box>\n          </div>\n        );\n      });\n    }\n  };\n\n  return (\n    <div>\n      <div>{renderList(postEntries)}</div>\n    </div>\n  );\n};\n\nexport default PostEntries;","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/blog/Comments/comments.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/blog/Comments/CommentEntries.js",["211"],"import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport PostComment from \"./PostComment\";\n///\n\nconst CommentEntries = ({commentEntries, postTitle}) => {\n\n  const renderList = () => {\n    if (commentEntries) {\n      return commentEntries.map((data) => {\n        return (\n          <div>\n            <div>\n              {data.username}\n              {data.comment}\n            </div>\n          </div>\n        );\n      });\n    }\n  };\n\n  return (\n    <div >\n      <div>\n        {renderList(commentEntries)}\n        <div>\n          <PostComment postTitle = { postTitle }/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommentEntries;","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/blog/Comments/PostComment.js",[],{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":5,"column":8,"nodeType":"218","messageId":"219","endLine":5,"endColumn":16},{"ruleId":"216","severity":1,"message":"220","line":18,"column":10,"nodeType":"218","messageId":"219","endLine":18,"endColumn":19},{"ruleId":"216","severity":1,"message":"221","line":18,"column":7,"nodeType":"218","messageId":"219","endLine":18,"endColumn":17},{"ruleId":"216","severity":1,"message":"222","line":24,"column":7,"nodeType":"218","messageId":"219","endLine":24,"endColumn":17},{"ruleId":"216","severity":1,"message":"223","line":123,"column":15,"nodeType":"218","messageId":"219","endLine":123,"endColumn":23},{"ruleId":"216","severity":1,"message":"224","line":124,"column":15,"nodeType":"218","messageId":"219","endLine":124,"endColumn":23},{"ruleId":"216","severity":1,"message":"225","line":125,"column":15,"nodeType":"218","messageId":"219","endLine":125,"endColumn":30},{"ruleId":"216","severity":1,"message":"226","line":126,"column":15,"nodeType":"218","messageId":"219","endLine":126,"endColumn":30},{"ruleId":"216","severity":1,"message":"227","line":127,"column":15,"nodeType":"218","messageId":"219","endLine":127,"endColumn":20},{"ruleId":"216","severity":1,"message":"228","line":8,"column":22,"nodeType":"218","messageId":"219","endLine":8,"endColumn":33},{"ruleId":"216","severity":1,"message":"229","line":16,"column":9,"nodeType":"218","messageId":"219","endLine":16,"endColumn":13},{"ruleId":"216","severity":1,"message":"230","line":61,"column":11,"nodeType":"218","messageId":"219","endLine":61,"endColumn":30},{"ruleId":"216","severity":1,"message":"231","line":65,"column":12,"nodeType":"218","messageId":"219","endLine":65,"endColumn":25},{"ruleId":"216","severity":1,"message":"232","line":62,"column":12,"nodeType":"218","messageId":"219","endLine":62,"endColumn":24},{"ruleId":"216","severity":1,"message":"220","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":19},{"ruleId":"216","severity":1,"message":"221","line":20,"column":7,"nodeType":"218","messageId":"219","endLine":20,"endColumn":17},{"ruleId":"233","severity":1,"message":"234","line":26,"column":25,"nodeType":"235","endLine":26,"endColumn":92},{"ruleId":"236","severity":1,"message":"237","line":54,"column":25,"nodeType":"235","messageId":"238","endLine":54,"endColumn":80,"fix":"239"},{"ruleId":"216","severity":1,"message":"240","line":2,"column":8,"nodeType":"218","messageId":"219","endLine":2,"endColumn":14},{"ruleId":"216","severity":1,"message":"241","line":4,"column":8,"nodeType":"218","messageId":"219","endLine":4,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":91,"column":37,"nodeType":"235","messageId":"238","endLine":91,"endColumn":80,"fix":"242"},{"ruleId":"233","severity":1,"message":"234","line":92,"column":33,"nodeType":"235","endLine":92,"endColumn":88},{"ruleId":"216","severity":1,"message":"243","line":60,"column":13,"nodeType":"218","messageId":"219","endLine":60,"endColumn":18},{"ruleId":"216","severity":1,"message":"244","line":60,"column":20,"nodeType":"218","messageId":"219","endLine":60,"endColumn":24},{"ruleId":"216","severity":1,"message":"245","line":1,"column":28,"nodeType":"218","messageId":"219","endLine":1,"endColumn":36},{"ruleId":"216","severity":1,"message":"246","line":2,"column":8,"nodeType":"218","messageId":"219","endLine":2,"endColumn":14},{"ruleId":"216","severity":1,"message":"221","line":18,"column":7,"nodeType":"218","messageId":"219","endLine":18,"endColumn":17},{"ruleId":"216","severity":1,"message":"221","line":17,"column":7,"nodeType":"218","messageId":"219","endLine":17,"endColumn":17},{"ruleId":"216","severity":1,"message":"223","line":86,"column":15,"nodeType":"218","messageId":"219","endLine":86,"endColumn":23},{"ruleId":"216","severity":1,"message":"247","line":7,"column":8,"nodeType":"218","messageId":"219","endLine":7,"endColumn":14},{"ruleId":"216","severity":1,"message":"248","line":12,"column":9,"nodeType":"218","messageId":"219","endLine":12,"endColumn":18},{"ruleId":"216","severity":1,"message":"220","line":13,"column":10,"nodeType":"218","messageId":"219","endLine":13,"endColumn":19},{"ruleId":"216","severity":1,"message":"249","line":15,"column":7,"nodeType":"218","messageId":"219","endLine":15,"endColumn":17},{"ruleId":"216","severity":1,"message":"250","line":23,"column":5,"nodeType":"218","messageId":"219","endLine":23,"endColumn":16},{"ruleId":"216","severity":1,"message":"251","line":55,"column":12,"nodeType":"218","messageId":"219","endLine":55,"endColumn":19},{"ruleId":"216","severity":1,"message":"232","line":56,"column":12,"nodeType":"218","messageId":"219","endLine":56,"endColumn":24},{"ruleId":"216","severity":1,"message":"252","line":57,"column":11,"nodeType":"218","messageId":"219","endLine":57,"endColumn":25},{"ruleId":"216","severity":1,"message":"253","line":58,"column":11,"nodeType":"218","messageId":"219","endLine":58,"endColumn":22},{"ruleId":"216","severity":1,"message":"254","line":2,"column":8,"nodeType":"218","messageId":"219","endLine":2,"endColumn":17},{"ruleId":"233","severity":1,"message":"234","line":72,"column":21,"nodeType":"235","endLine":72,"endColumn":76},{"ruleId":"216","severity":1,"message":"255","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":30},{"ruleId":"256","severity":1,"message":"257","line":14,"column":18,"nodeType":"258","messageId":"259","endLine":14,"endColumn":20},{"ruleId":"212","replacedBy":"260"},{"ruleId":"214","replacedBy":"261"},{"ruleId":"233","severity":1,"message":"234","line":39,"column":19,"nodeType":"235","endLine":39,"endColumn":74},{"ruleId":"216","severity":1,"message":"262","line":4,"column":7,"nodeType":"218","messageId":"219","endLine":4,"endColumn":10},{"ruleId":"216","severity":1,"message":"240","line":4,"column":10,"nodeType":"218","messageId":"219","endLine":4,"endColumn":16},{"ruleId":"216","severity":1,"message":"240","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":16},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"no-unused-vars","'Notfound' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","'labelStyle' is assigned a value but never used.","'inputStyle' is assigned a value but never used.","'username' is assigned a value but never used.","'password' is assigned a value but never used.","'Confirmpassword' is assigned a value but never used.","'favoriteTeacher' is assigned a value but never used.","'email' is assigned a value but never used.","'setUserInfo' is assigned a value but never used.","'info' is assigned a value but never used.","'printrecommendation' is assigned a value but never used.","'printfunction' is assigned a value but never used.","'gridColumApi' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"265","text":"266"},"'Button' is defined but never used.","'books' is defined but never used.",{"range":"267","text":"266"},"'title' is assigned a value but never used.","'user' is assigned a value but never used.","'Fragment' is defined but never used.","'Select' is defined but never used.","'Search' is defined but never used.","'useParams' is defined but never used.","'sideBySide' is assigned a value but never used.","'userDetails' is assigned a value but never used.","'gridApi' is assigned a value but never used.","'searchDivStyle' is assigned a value but never used.","'searchStyle' is assigned a value but never used.","'SearchBar' is defined but never used.","'PureComponent' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["263"],["264"],"'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2618,2618]," rel=\"noreferrer\"",[3805,3805]]